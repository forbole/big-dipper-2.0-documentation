"use strict";(self.webpackChunkbig_dipper_2_0_docs=self.webpackChunkbig_dipper_2_0_docs||[]).push([[568],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),u=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(a),m=r,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||o;return a?n.createElement(h,s(s({ref:t},p),{},{components:a})):n.createElement(h,s({ref:t},p))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:r,s[1]=i;for(var u=2;u<o;u++)s[u]=a[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9203:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var n=a(7462),r=(a(7294),a(3905));const o={title:"3. Setup and run Hasura",sidebar_position:4},s=void 0,i={unversionedId:"cosmos-based/parser/hasura",id:"cosmos-based/parser/hasura",title:"3. Setup and run Hasura",description:"Once you have successfully started BDJuno, the last step is to set up Hasura to expose the parsed data using a GraphQL endpoint. To do this you have to:",source:"@site/docs/cosmos-based/parser/hasura.md",sourceDirName:"cosmos-based/parser",slug:"/cosmos-based/parser/hasura",permalink:"/cosmos-based/parser/hasura",draft:!1,tags:[],version:"current",lastUpdatedAt:1681203982,formattedLastUpdatedAt:"Apr 11, 2023",sidebarPosition:4,frontMatter:{title:"3. Setup and run Hasura",sidebar_position:4},sidebar:"mySidebar",previous:{title:"2. Setup and run BDJuno",permalink:"/cosmos-based/parser/setup"},next:{title:"Yaml format",permalink:"/cosmos-based/parser/config/"}},l={},u=[{value:"Installing Hasura",id:"installing-hasura",level:2},{value:"Importing the metadata",id:"importing-the-metadata",level:2},{value:"Configuring Hasura Actions",id:"configuring-hasura-actions",level:2},{value:"Testing Hasura Actions",id:"testing-hasura-actions",level:3},{value:"Configuring Hasura Actions Custom Endpoints (Optional)",id:"configuring-hasura-actions-custom-endpoints-optional",level:3}],p={toc:u},d="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Once you have successfully started BDJuno, the last step is to set up ",(0,r.kt)("a",{parentName:"p",href:"https://hasura.io/"},"Hasura")," to expose the parsed data using a GraphQL endpoint. To do this you have to:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install Hasura"),(0,r.kt)("li",{parentName:"ol"},"Import the metadata we provide you with"),(0,r.kt)("li",{parentName:"ol"},"Configure Hasura Actions ")),(0,r.kt)("h2",{id:"installing-hasura"},"Installing Hasura"),(0,r.kt)("p",null,"The easiest way to install Hasura is to follow the ",(0,r.kt)("a",{parentName:"p",href:"https://hasura.io/docs/latest/graphql/core/getting-started/docker-simple.html"},"official guide"),". This will allow you to have a Hasura instance up and running in a matter of minutes."),(0,r.kt)("admonition",{title:"env variables",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"When starting Hasura, make sure you specify the following environmental variables:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Role:"))),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},'-e HASURA_GRAPHQL_UNAUTHORIZED_ROLE="anonymous"\n')),(0,r.kt)("p",{parentName:"admonition"},"This will make sure that even non-authenticated users will be able to access the endpoint correctly."),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Hasura Actions Base URL:"))),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},'-e ACTION_BASE_URL="[Base URL for Hasura Actions Handlers]"\n')),(0,r.kt)("p",{parentName:"admonition"},"This allows you to set up custom endpoints for Hasura Actions handlers. "),(0,r.kt)("p",{parentName:"admonition"},"By default, the Hasura Actions service runs on ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:3000"),", so you may want to set it up as below: "),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},'-e ACTION_BASE_URL="http://localhost:3000"\n'))),(0,r.kt)("p",null,"To verify if the docker container is running with success run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ docker ps\n")),(0,r.kt)("p",null,"It should return the list of running Docker containers and the output should look similar to this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'CONTAINER ID   IMAGE                          COMMAND                  CREATED        STATUS        PORTS     NAMES\naa7b17f7fe4b   hasura/graphql-engine:v2.0.3   "graphql-engine serve"   1 minute ago   Up 1 minute             hasura-bdjuno\n')),(0,r.kt)("p",null,"Once this is done, you will also need to install ",(0,r.kt)("a",{parentName:"p",href:"https://hasura.io/docs/latest/graphql/core/hasura-cli/install-hasura-cli.html#install-hasura-cli"},"Hasura CLI")," on the same machine where you cloned the BDJuno repository."),(0,r.kt)("h2",{id:"importing-the-metadata"},"Importing the metadata"),(0,r.kt)("p",null,"When you have installed both Hasura and Hasura CLI, you are now ready to import the metadata. This will allow you to easily set up all the queries that BigDipper will later need. To do this, you can simply run the following commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# Change to hasura directory inside bdjuno repository\n$ cd /path/to/bdjuno/hasura\n\n# Import the metadata into the remote server\n$ hasura metadata apply --endpoint <your-endpoint> --admin-secret <hasura_password>\n")),(0,r.kt)("admonition",{title:"Verify endpoint  ",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Make sure that ",(0,r.kt)("inlineCode",{parentName:"p"},"<your-endpoint>")," represents your full GraphQL endpoint (eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8080"),") and ",(0,r.kt)("inlineCode",{parentName:"p"},"<hasura_password>")," matches the console secret you specified while starting Hasura. You can remove the flag if you did not use a secret."),(0,r.kt)("p",{parentName:"admonition"},"Once the metadata is successfully applied, you will be able to start using it properly.")),(0,r.kt)("admonition",{title:"Metadata error    ",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"If Hasura is complaining about metadata not being valid after importing them, please head into the ",(0,r.kt)("em",{parentName:"p"},"Metadata status")," page, delete all the metadata, and try re-importing them. This should fix all the issues.")),(0,r.kt)("h2",{id:"configuring-hasura-actions"},"Configuring Hasura Actions"),(0,r.kt)("p",null,"Hasura Actions allows querying certain address-specific data from the node when needed instead of storing it in the database. It starts on ",(0,r.kt)("inlineCode",{parentName:"p"},"bdjuno start")," command and runs together with BDJuno on the same instance. It can be enabled inside ",(0,r.kt)("inlineCode",{parentName:"p"},"modules")," section inside ",(0,r.kt)("inlineCode",{parentName:"p"},"config.yaml")," file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"chain:\n    bech32_prefix: desmos\n    modules:\n        - actions\n")),(0,r.kt)("p",null,"It runs by default on ",(0,r.kt)("inlineCode",{parentName:"p"},"127.0.0.1:3000")," but it can be modified inside the ",(0,r.kt)("inlineCode",{parentName:"p"},"actions")," section inside the ",(0,r.kt)("inlineCode",{parentName:"p"},"config.yaml")," file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"actions:\n    host: 127.0.0.1\n    port: 3000\n")),(0,r.kt)("h3",{id:"testing-hasura-actions"},"Testing Hasura Actions"),(0,r.kt)("p",null,"To verify if Hasura Actions are working properly you should run a test query eg.:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'$ curl http://localhost:3000/account_balance \\\n    --data \'{ "input": { "address": "desmos16fc5kd5d4f5sjq5wz3v8gkyk4xd8f7hrax27xw"} }\'\n')),(0,r.kt)("p",null,"It should return the account balance and the output should look similar to this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{"coins":[{"amount":"608146112","denom":"udsm"}]}\n')),(0,r.kt)("h3",{id:"configuring-hasura-actions-custom-endpoints-optional"},"Configuring Hasura Actions Custom Endpoints (Optional)"),(0,r.kt)("p",null,"By default Hasura Actions will listen to default node address. If you would like to use custom endpoints for hasura actions, you can set them inside ",(0,r.kt)("inlineCode",{parentName:"p"},"config.yaml")," file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"actions:\n    host: 127.0.0.1\n    port: 3000\n    node:\n        rpc:\n            client_name: hasura-actions\n            address: http://localhost:26657\n            max_connections: 20\n        grpc:\n            address: http://localhost:9090\n            insecure: true\n")),(0,r.kt)("p",null,"Remember to restart the ",(0,r.kt)("inlineCode",{parentName:"p"},"bdjuno")," service after applying any changes to the Hasura Actions config."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ sudo systemctl restart bdjuno\n")))}c.isMDXComponent=!0}}]);