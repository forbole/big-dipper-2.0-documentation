"use strict";(self.webpackChunkbig_dipper_2_0_docs=self.webpackChunkbig_dipper_2_0_docs||[]).push([[498],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return u}});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(t),u=o,g=c["".concat(l,".").concat(u)]||c[u]||m[u]||r;return t?a.createElement(g,i(i({ref:n},d),{},{components:t})):a.createElement(g,i({ref:n},d))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=c;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<r;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},1254:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return d},default:function(){return c}});var a=t(2122),o=t(9756),r=(t(7294),t(3905)),i=["components"],s={title:"Custom Tx Messages",sidebar_position:2},l=void 0,p={unversionedId:"cosmos-based/frontend/customisations/tx",id:"cosmos-based/frontend/customisations/tx",isDocsHomePage:!1,title:"Custom Tx Messages",description:"By default, message types that don't exist on the base chain (cosmos in this case) will be displayed as unknown but you can easily customize your own by doing the following:",source:"@site/docs/cosmos-based/frontend/customisations/tx.md",sourceDirName:"cosmos-based/frontend/customisations",slug:"/cosmos-based/frontend/customisations/tx",permalink:"/cosmos-based/frontend/customisations/tx",version:"current",lastUpdatedAt:1644265362,formattedLastUpdatedAt:"2/7/2022",sidebarPosition:2,frontMatter:{title:"Custom Tx Messages",sidebar_position:2},sidebar:"mySidebar",previous:{title:"Themes",permalink:"/cosmos-based/frontend/customisations/theme"},next:{title:"Chain Config Reference",permalink:"/cosmos-based/frontend/chain-config"}},d=[{value:"Create Tx Model",id:"create-tx-model",children:[]},{value:"Set i18n Content",id:"set-i18n-content",children:[]},{value:"Create UI Component",id:"create-ui-component",children:[]},{value:"Update Utils",id:"update-utils",children:[]},{value:"Update Message Filter",id:"update-message-filter",children:[]}],m={toc:d};function c(e){var n=e.components,t=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"By default, message types that don't exist on the base chain (cosmos in this case) will be displayed as ",(0,r.kt)("inlineCode",{parentName:"p"},"unknown")," but you can easily customize your own by doing the following:"),(0,r.kt)("h2",{id:"create-tx-model"},"Create Tx Model"),(0,r.kt)("p",null,"Setup a class model in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/models/msg/<module>"),". We have separated all tx msgs by their corresponding chain module making it easy to associate."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"All class messages ",(0,r.kt)("strong",{parentName:"p"},"must")," contain the following:"),(0,r.kt)("ol",{parentName:"div"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"category")," (module)"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"type")," (message type)"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"json")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"fromJson")," static method")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"class MsgUnjail {\n  public category: Categories; // required\n  public type: string; // required\n  public json: any; // required\n  public validatorAddress: string;\n\n  constructor(payload: any) {\n    this.category = 'slashing'; // required\n    this.type = payload.type; // required\n    this.json = payload.json; // required\n    this.validatorAddress = payload.validatorAddress;\n  }\n\n  static fromJson(json: any) {\n    return new MsgUnjail({\n      json,\n      type: json['@type'],\n      validatorAddress: json.validator_addr,\n    });\n  }\n}\n")),(0,r.kt)("p",null,"Import and export your model in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/models/index.ts")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"import MsgUnjail from './msg/slashing/msg_unjail';\n\nexport {\n  MsgUnjail\n}\n")),(0,r.kt)("h2",{id:"set-i18n-content"},"Set i18n Content"),(0,r.kt)("p",null,"Create legible label in ",(0,r.kt)("inlineCode",{parentName:"p"},"public/locales/<lang>/message_labels.json")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'"txUnjailLabel": "Unjail"\n')),(0,r.kt)("p",null,"Create legible content in ",(0,r.kt)("inlineCode",{parentName:"p"},"public/locales/<lang>/message_contents.json")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'"txUnjailContent": "<0>{{validator}}</0> unjailed"\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"We are using ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://www.npmjs.com/package/next-translate"},"next-translate"))))),(0,r.kt)("h2",{id:"create-ui-component"},"Create UI Component"),(0,r.kt)("p",null,"In ",(0,r.kt)("inlineCode",{parentName:"p"},"src/components/msg")," create a corresponding component for your newly created model."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"import React from 'react';\nimport Trans from 'next-translate/Trans';\nimport { Typography } from '@material-ui/core';\nimport { Name } from '@components';\nimport { MsgUnjail } from '@models';\nimport { useProfileRecoil } from '@recoil/profiles';\n\nconst Unjail = (props: {\n  message: MsgUnjail;\n}) => {\n  const { message } = props;\n  const validator = useProfileRecoil(message.validatorAddress);\n  const validatorMoniker = validator ? validator?.name : message.validatorAddress;\n\n  return (\n    <Typography>\n      <Trans\n        i18nKey=\"message_contents:txUnjailContent\"\n        components={[\n          (\n            <Name\n              address={message.validatorAddress}\n              name={validatorMoniker}\n            />\n          ),\n        ]}\n      />\n    </Typography>\n  );\n};\n\nexport default Unjail;\n\n")),(0,r.kt)("p",null,"Import and export your component in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/components/msg/index.ts")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"import Unjail from './slashing/unjail';\n\nexport {\n  Unjail\n}\n")),(0,r.kt)("h2",{id:"update-utils"},"Update Utils"),(0,r.kt)("p",null,"In ",(0,r.kt)("inlineCode",{parentName:"p"},"src/components/msg/utils.tsx")," go to ",(0,r.kt)("inlineCode",{parentName:"p"},"customTypeToModel")," and add your model in the following format"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<message type>: {\n  model: <Model>,\n  content: <Component>,\n  tagTheme: <tag color>,\n  tagDisplay: <tag value>,\n}\n\n## example\n\n'/cosmos.slashing.v1beta1.MsgUnjail': {\n  model: MODELS.MsgUnjail,\n  content: COMPONENTS.Unjail,\n  tagTheme: 'five',\n  tagDisplay: 'txUnjailLabel',\n}\n")),(0,r.kt)("p",null,"Your newly added transaction message should be showing up correctly."),(0,r.kt)("h2",{id:"update-message-filter"},"Update Message Filter"),(0,r.kt)("p",null,"Edit the utils file in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/components/transaction_messages_filter/utils.tsx"),"."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},(0,r.kt)("inlineCode",{parentName:"p"},"key")," value must exist in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/models/msg/types.ts")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"export const getFilterLabels = () => {\n  return ([\n    {\n      key: 'none',\n      display: 'none',\n    },\n    {\n      key: 'bank',\n      display: 'bank',\n    },\n    {\n      key: 'others',\n      display: 'others',\n    },\n    ...\n  ]);\n};\n")))}c.isMDXComponent=!0}}]);