"use strict";(self.webpackChunkbig_dipper_2_0_docs=self.webpackChunkbig_dipper_2_0_docs||[]).push([[324],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(a),m=n,h=p["".concat(l,".").concat(m)]||p[m]||u[m]||o;return a?r.createElement(h,s(s({ref:t},d),{},{components:a})):r.createElement(h,s({ref:t},d))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},6869:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return d},default:function(){return p}});var r=a(2122),n=a(9756),o=(a(7294),a(3905)),s=["components"],i={title:"v1.1.0",sidebar_position:1},l=void 0,c={unversionedId:"cosmos-based/parser/migrations/v1.1.0",id:"cosmos-based/parser/migrations/v1.1.0",isDocsHomePage:!1,title:"v1.1.0",description:"Since the release of BDjuno `v1.1.0`, certain address-specific data are no longer periodically parsed from the node and stored in the database.",source:"@site/docs/cosmos-based/parser/migrations/v1.1.0.md",sourceDirName:"cosmos-based/parser/migrations",slug:"/cosmos-based/parser/migrations/v1.1.0",permalink:"/cosmos-based/parser/migrations/v1.1.0",version:"current",lastUpdatedAt:1646895489,formattedLastUpdatedAt:"3/10/2022",sidebarPosition:1,frontMatter:{title:"v1.1.0",sidebar_position:1},sidebar:"mySidebar",previous:{title:"Custom chains",permalink:"/cosmos-based/parser/custom-chains"},next:{title:"Setup",permalink:"/cosmos-based/frontend/setup"}},d=[{value:"Update your chain&#39;s base branch",id:"update-your-chains-base-branch",children:[{value:"Merge tag according to your cosmos sdk base:",id:"merge-tag-according-to-your-cosmos-sdk-base",children:[]}]},{value:"Update hasura metadata",id:"update-hasura-metadata",children:[]},{value:"Restart services",id:"restart-services",children:[]}],u={toc:d};function p(e){var t=e.components,a=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Since the release of BDjuno ",(0,o.kt)("inlineCode",{parentName:"p"},"v1.1.0"),", certain address-specific data are no longer periodically parsed from the node and stored in the database.\nInstead, those data are obtained directly from the node when necessary thanks to the ",(0,o.kt)("a",{parentName:"p",href:"https://hasura.io/docs/latest/graphql/core/actions/index.html"},"Hasura Actions")," service."),(0,o.kt)("p",null,"Here's the list of data which are acquired through Hasura Actions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Of a certain address/delegator:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Account balance"),(0,o.kt)("li",{parentName:"ul"},"Delegation rewards"),(0,o.kt)("li",{parentName:"ul"},"Delegator withdraw address"),(0,o.kt)("li",{parentName:"ul"},"Delegations"),(0,o.kt)("li",{parentName:"ul"},"Total delegations amount"),(0,o.kt)("li",{parentName:"ul"},"Unbonding delegations"),(0,o.kt)("li",{parentName:"ul"},"Total unbonding delegations amount"),(0,o.kt)("li",{parentName:"ul"},"Redelegations"))),(0,o.kt)("li",{parentName:"ul"},"Of a certain validator:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Commission amount"),(0,o.kt)("li",{parentName:"ul"},"Delegations to this validator"),(0,o.kt)("li",{parentName:"ul"},"Redelegations from this validator"),(0,o.kt)("li",{parentName:"ul"},"Unbonding delegations")))),(0,o.kt)("h2",{id:"update-your-chains-base-branch"},"Update your chain's base branch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git fetch --tags\ngit checkout <your chain base>\ngit checkout -b merge/v1.1.0\n")),(0,o.kt)("h3",{id:"merge-tag-according-to-your-cosmos-sdk-base"},"Merge tag according to your cosmos sdk base:"),(0,o.kt)("p",null,"For cosmos sdk v0.44.x and later:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git merge v1.1.0\n")),(0,o.kt)("p",null,"For stargate:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git merge v1.1.0-stargate\n")),(0,o.kt)("p",null,"Fix all merge conflicts."),(0,o.kt)("h2",{id:"update-hasura-metadata"},"Update hasura metadata"),(0,o.kt)("p",null,"Go to the hasura directory and re-apply the metadata to include the hasura actions:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd bdjuno/hasura\nhasura metadata apply --endpoint <your-endpoint> --admin-secret <hasura_password>\n")),(0,o.kt)("h2",{id:"restart-services"},"Restart services"),(0,o.kt)("p",null,"Make install, restart the ",(0,o.kt)("a",{parentName:"p",href:"/cosmos-based/parser/setup#running-bdjuno"},"bdjuno service"),", and\nstart the ",(0,o.kt)("a",{parentName:"p",href:"/cosmos-based/parser/hasura#start-hasura-actions"},"hasura actions service"),". "),(0,o.kt)("p",null,"Once the bdjuno and hasura actions are working properly, optionally\nyou could drop the below DB tables which will no longer be updated by the new BDjuno along with the functions:"),(0,o.kt)("p",null,"Tables: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"account_balance\ndelegation\nredelegation\nunbonding_delegation\ndelegators_to_refresh\nvalidator_commission_amount\ndelegation_reward\n")),(0,o.kt)("p",null,"Functions:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"self_delegations\nis_delegation_self_delegate\naccount_balance_tokens_prices\n")))}p.isMDXComponent=!0}}]);