"use strict";(self.webpackChunkbig_dipper_2_0_docs=self.webpackChunkbig_dipper_2_0_docs||[]).push([[480],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),c=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},b=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),l=c(r),b=n,m=l["".concat(p,".").concat(b)]||l[b]||u[b]||o;return r?a.createElement(m,s(s({ref:t},d),{},{components:r})):a.createElement(m,s({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=b;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[l]="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=r[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},9493:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=r(7462),n=(r(7294),r(3905));const o={title:"1. Setup the database",sidebar_position:2},s=void 0,i={unversionedId:"cosmos-based/parser/database",id:"cosmos-based/parser/database",title:"1. Setup the database",description:"BDJuno relies on a PostgreSQL database to store the parsed data, hence the first thing you need to do is install PostgreSQL.",source:"@site/docs/cosmos-based/parser/database.md",sourceDirName:"cosmos-based/parser",slug:"/cosmos-based/parser/database",permalink:"/cosmos-based/parser/database",draft:!1,tags:[],version:"current",lastUpdatedAt:1681203982,formattedLastUpdatedAt:"Apr 11, 2023",sidebarPosition:2,frontMatter:{title:"1. Setup the database",sidebar_position:2},sidebar:"mySidebar",previous:{title:"Overview",permalink:"/cosmos-based/parser/overview"},next:{title:"2. Setup and run BDJuno",permalink:"/cosmos-based/parser/setup"}},p={},c=[],d={toc:c},l="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(l,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"BDJuno relies on a PostgreSQL database to store the parsed data, hence the first thing you need to do is install ",(0,n.kt)("a",{parentName:"p",href:"https://www.postgresql.org/"},"PostgreSQL"),".\nOnce installed, you need to create a new database and a new user that is going to read and write data inside it. "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"# login to the database\n$ sudo su - postgres\n$ psql\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# create database and user\nCREATE DATABASE bdjuno;\nCREATE USER '<your_user>' WITH ENCRYPTED PASSWORD '<your_password>';\nGRANT ALL PRIVILEGES ON DATABASE bdjuno TO '<your_user>';\n")),(0,n.kt)("p",null,"Then, you need to run the SQL queries that you can find inside the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/forbole/bdjuno/tree/cosmos/v0.44.x/database/schema"},(0,n.kt)("inlineCode",{parentName:"a"},"database/schema")," folder"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"$ cd /path/to/bdjuno/database/schema\n$ psql -U '<your_user>' -d bdjuno -f 00-cosmos.sql\n$ psql -U '<your_user>' -d bdjuno -f 01-auth.sql\n$ psql -U '<your_user>' -d bdjuno -f 02-bank.sql\n$ psql -U '<your_user>' -d bdjuno -f 03-staking.sql\n$ ...\n\n# do it for all the SQL files in this folder\n")),(0,n.kt)("admonition",{title:"Select the correct branch  ",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Please make sure you select the correct branch inside the BDJuno repository to view the correct schema for the chain you want to parse.")))}u.isMDXComponent=!0}}]);