"use strict";(self.webpackChunkbig_dipper_2_0_docs=self.webpackChunkbig_dipper_2_0_docs||[]).push([[901],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return u}});var o=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=o.createContext({}),d=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},m=function(e){var n=d(e.components);return o.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},c=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=d(t),u=i,h=c["".concat(s,".").concat(u)]||c[u]||p[u]||a;return t?o.createElement(h,r(r({ref:n},m),{},{components:t})):o.createElement(h,r({ref:n},m))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,r=new Array(a);r[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var d=2;d<a;d++)r[d]=t[d];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4712:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return m},default:function(){return c}});var o=t(2122),i=t(9756),a=(t(7294),t(3905)),r=["components"],l={title:"Themes",sidebar_position:1},s=void 0,d={unversionedId:"cosmos-based/frontend/customisations/theme",id:"cosmos-based/frontend/customisations/theme",isDocsHomePage:!1,title:"Themes",description:"By default we offer light, dark, deuteranopia and tritanopia themes to make our explorer more accessible.",source:"@site/docs/cosmos-based/frontend/customisations/theme.md",sourceDirName:"cosmos-based/frontend/customisations",slug:"/cosmos-based/frontend/customisations/theme",permalink:"/cosmos-based/frontend/customisations/theme",version:"current",lastUpdatedAt:1639400633,formattedLastUpdatedAt:"12/13/2021",sidebarPosition:1,frontMatter:{title:"Themes",sidebar_position:1},sidebar:"mySidebar",previous:{title:"Setup",permalink:"/cosmos-based/frontend/setup"},next:{title:"Custom Tx Messages",permalink:"/cosmos-based/frontend/customisations/tx"}},m=[{value:"Updating <code>light</code> / <code>dark</code> theme",id:"updating-light--dark-theme",children:[]},{value:"Overriding Common (Example)",id:"overriding-common-example",children:[]},{value:"Removing a default theme",id:"removing-a-default-theme",children:[]},{value:"Adding Custom theme",id:"adding-custom-theme",children:[]}],p={toc:m};function c(e){var n=e.components,t=(0,i.Z)(e,r);return(0,a.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"By default we offer ",(0,a.kt)("inlineCode",{parentName:"p"},"light"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"dark"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"deuteranopia")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"tritanopia")," themes to make our explorer more accessible."),(0,a.kt)("p",null,"All themes are located inside ",(0,a.kt)("inlineCode",{parentName:"p"},"src/styles/themes"),"."),(0,a.kt)("h2",{id:"updating-light--dark-theme"},"Updating ",(0,a.kt)("inlineCode",{parentName:"h2"},"light")," / ",(0,a.kt)("inlineCode",{parentName:"h2"},"dark")," theme"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"src/styles/theme/index.ts")," will hold all themes in which ",(0,a.kt)("inlineCode",{parentName:"p"},"light")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"dark")," have in common. If you would like to override anything in common just add the key value pair inside ",(0,a.kt)("inlineCode",{parentName:"p"},"light.ts / dark.ts"),". All theme files will have higher priority than the colors inside ",(0,a.kt)("inlineCode",{parentName:"p"},"index.ts"),"."),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Default Common"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"/** Common themes that don't change across light and dark theme */\nexport const common = {\n  breakpoints: {\n    keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n    values: {\n      xs: 0,\n      sm: 375,\n      md: 768,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n  mixins: {\n    toolbar: {\n      '@media (min-width: 1280px)': {\n        height: '160px',\n        overflow: 'hidden',\n      },\n    },\n    layout: {\n      padding: '16px',\n      '@media (min-width: 1280px)': {\n        padding: '16px 24px',\n      },\n    },\n    tableCell: {\n      height: '50px',\n      padding: '16px',\n      display: 'flex',\n      alignItems: 'center',\n      '& > *': {\n        width: '100%',\n      },\n      '& .MuiTypography-body1': {\n        whiteSpace: 'nowrap',\n      },\n    },\n  },\n  props: {\n    MuiSvgIcon: {\n      htmlColor: '#999999', // same as custom /general /icons\n    },\n    MuiButton: {\n      disableElevation: true,\n    },\n  },\n  typography: {\n    fontFamily: '\"Hind Madurai\", sans-serif',\n    h1: {\n      fontSize: '2rem',\n      letterSpacing: 0.25,\n    },\n    h2: {\n      fontSize: '1.5rem',\n      letterSpacing: 0,\n    },\n    h3: {\n      fontSize: '1.25rem',\n      letterSpacing: 0.15,\n    },\n    h4: {\n      fontSize: '1rem',\n      letterSpacing: 0.15,\n    },\n    h5: {\n      fontSize: '0.875rem',\n      letterSpacing: 0.1,\n      fontWeight: 500,\n    },\n    h6: {\n      fontSize: '0.75rem',\n      letterSpacing: 0.1,\n      fontWeight: 500,\n    },\n    body1: {\n      fontSize: '1rem',\n      whiteSpace: 'pre-wrap',\n      letterSpacing: 0.5,\n    },\n    body2: {\n      fontSize: '0.875rem',\n      letterSpacing: 0.25,\n    },\n    caption: {\n      fontSize: '0.75rem',\n      letterSpacing: 0.4,\n    },\n    button: {\n      fontSize: '0.875rem',\n      letterSpacing: 1.25,\n      textTransform: 'none',\n    },\n  },\n  palette: {\n    custom: {\n      general: {\n        icon: '#999999',\n      },\n      tags: {\n        zero: '#E8E8E8',\n        one: '#2460FA',\n        two: '#2BA891',\n        three: '#E79720',\n        four: '#F17047',\n        five: '#DA4B4B',\n        six: '#9438DC',\n        seven: '#1A869D',\n        eight: '#2C9944',\n        nine: '#B49F31',\n        ten: '#E9A846',\n        eleven: '#E94681',\n        twelve: '#C15EC4',\n        thirteen: '#C388D9',\n        fourteen: '#46AEE9',\n        fifteen: '#58BC91',\n        sixteen: '#90BC58',\n        seventeen: '#E99E8E',\n        eighteen: '#F0A479',\n        nineteen: '#D37763',\n        twenty: '#D9C788',\n      },\n      fonts: {\n        fontFive: '#FFFFFF',\n        highlight: '#1D86FF', // links\n        // highlight: '#56B4E9', // links\n      },\n      condition: {\n        zero: '#E8E8E8',\n        one: '#1EC490',\n        two: '#FF961B',\n        three: '#FC6A8A',\n      },\n      tokenomics: {\n        one: '#1EC490',\n        two: '#497BFF',\n        three: '#9F46EC',\n      },\n      charts: {\n        zero: '#E8E8E8',\n        one: '#EB3AA4',\n        two: '#497BFF',\n        three: '#FF961B',\n        four: '#1EC490',\n        five: '#9F46EC',\n      },\n    },\n  },\n  overrides: {\n    MuiTableHead: {\n      root: {\n        backgroundColor: 'initial',\n      },\n    },\n    MuiTooltip: {\n      tooltip: {\n        backgroundColor: 'transparent',\n      },\n    },\n    MuiTableCell: {\n      root: {\n        borderBottom: 'none',\n        padding: '0 16px',\n        height: '50px',\n        fontSize: '1rem',\n      },\n    },\n    MuiTabs: {\n      root: {\n        // '& .MuiTabs-fixed': {\n        //   overflow: 'auto',\n        // },\n        '&.MuiTabs-root, & .MuiTab-root': {\n          minHeight: '40px',\n        },\n        '& .MuiTab-textColorInherit': {\n          opacity: 1,\n          fontSize: '1rem',\n        },\n      },\n    },\n  },\n};\n"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Default Light Theme"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"const backgroundDefault = '#F8F8F8';\nconst surfaceOne = '#FFFFFF';\nconst surfaceTwo = '#F8F8F8';\nconst fontOne = '#000000';\nconst fontTwo = '#414141';\nconst fontThree = '#777777';\n\n/** Custom theme overrides for light mode */\nexport const lightThemeOverride = {\n  mixins: {\n    tableCell: {\n      background: surfaceOne, // surface one\n      '&.odd': {\n        background: surfaceTwo, // surface two\n      },\n    },\n  },\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#FD3B4C',\n      contrastText: '#fff',\n    },\n    background: {\n      default: backgroundDefault,\n      paper: surfaceOne,\n    },\n    divider: '#E8E8E8',\n    text: {\n      primary: '#000000',\n      secondary: '#414141',\n    },\n    custom: {\n      general: {\n        background: backgroundDefault, // same as background default\n        surfaceOne, // same as background paper\n        surfaceTwo, // striped tables\n      },\n      fonts: {\n        fontOne,\n        fontTwo,\n        fontThree,\n        fontFour: '#999999',\n      },\n      primaryData: {\n        one: '#FA3A39',\n        two: '#FD5E1F',\n        three: '#FD5D4E',\n        four: '#FD9526',\n      },\n      results: {\n        pass: '#1EC490',\n        fail: '#FD3B4C',\n      },\n    },\n  },\n  overrides: {\n    MuiTableBody: {\n      root: {\n        '& .MuiTableRow-root': {\n          '&:nth-child(odd)': {\n            backgroundColor: surfaceTwo, // surface two\n          },\n        },\n        '& .MuiTableCell-root': {\n          color: fontTwo, // font two\n        },\n      },\n    },\n    MuiTabs: {\n      root: {\n        '& .MuiTab-textColorInherit': {\n          color: fontThree, // font three\n        },\n        '& .MuiTab-textColorInherit.Mui-selected': {\n          color: fontOne, // font one\n        },\n        '& .MuiTabs-indicator': {\n          backgroundColor: fontOne, // font one\n        },\n      },\n    },\n  },\n};\n"))),(0,a.kt)("h2",{id:"overriding-common-example"},"Overriding Common (Example)"),(0,a.kt)("p",null,"For example, if we decided ",(0,a.kt)("inlineCode",{parentName:"p"},"palette.custom.tags.one")," should not be in common because we wanted dark and light mode to have separate colors we can easily copy and paste the key value inside ",(0,a.kt)("inlineCode",{parentName:"p"},"light.ts")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"dark.ts"),". Common will then be overriden by the value inside ",(0,a.kt)("inlineCode",{parentName:"p"},"light.ts")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"dark.ts"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"index.ts\n{\n  ...\n  palette: {\n    custom: {\n      tags: {\n        one: '#2460FA' // will be overriden\n      }\n      ...\n    }\n  }\n}\n\nlight.ts\n\n{\n  ...\n  palette: {\n    custom: {\n      tags: {\n        one: 'blue' // higher priority\n      }\n      ...\n    }\n  }\n}\n\n----\n\ndark.ts\n\n{\n  ...\n  palette: {\n    custom: {\n      tags: {\n        one: 'ornage' // higher priority\n      }\n    }\n    ...\n  }\n}\n")),(0,a.kt)("h2",{id:"removing-a-default-theme"},"Removing a default theme"),(0,a.kt)("p",null,"If you decided you don't need dark mode or whatever else mode you can easily go to ",(0,a.kt)("inlineCode",{parentName:"p"},"src/contexts/settings"),"."),(0,a.kt)("p",null,"There is a ",(0,a.kt)("inlineCode",{parentName:"p"},"themeList")," in side ",(0,a.kt)("inlineCode",{parentName:"p"},"hooks.tsx"),". Customise it to your needs."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"const themeList = [\n    'light',\n    'dark',\n    'deuteranopia',\n    'tritanopia',\n  ];\n")),(0,a.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"If you remove ",(0,a.kt)("inlineCode",{parentName:"p"},"light")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"dark")," mode you will need to update how the app handles users with a dark theme preference. By default the app will check the user's preference and decide which mode to use."),(0,a.kt)("pre",{parentName:"div"},(0,a.kt)("code",{parentName:"pre"},"if (themeSelection === 'device') {\n  if (\n    isClient\n    && window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n  ) {\n    setTheme('dark');\n  }\n}\n")))),(0,a.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"If you remove ",(0,a.kt)("inlineCode",{parentName:"p"},"light")," mode you will need to update the initial theme state in ",(0,a.kt)("inlineCode",{parentName:"p"},"index.ts"),"."),(0,a.kt)("pre",{parentName:"div"},(0,a.kt)("code",{parentName:"pre"},"const initialThemeState: ThemeState = {\n  theme: 'light',\n  themeSelection: 'device',\n  muiTheme: createMuiTheme(lightTemplate),\n  themeList: [],\n};\n")))),(0,a.kt)("h2",{id:"adding-custom-theme"},"Adding Custom theme"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a new theme in ",(0,a.kt)("inlineCode",{parentName:"li"},"src/styles/theme"),", export it in ",(0,a.kt)("inlineCode",{parentName:"li"},"src/styles/theme/index.ts"),"."),(0,a.kt)("li",{parentName:"ol"},"Edit ",(0,a.kt)("inlineCode",{parentName:"li"},"src/contexts/settings/hooks.tsx")),(0,a.kt)("li",{parentName:"ol"},"Add your theme name inside ",(0,a.kt)("inlineCode",{parentName:"li"},"public/locales/<lang>/common"),". Make sure the key is the same in ",(0,a.kt)("inlineCode",{parentName:"li"},"src/contexts/settings/hooks.tsx"),".")))}c.isMDXComponent=!0}}]);