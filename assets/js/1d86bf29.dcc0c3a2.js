"use strict";(self.webpackChunkbig_dipper_2_0_docs=self.webpackChunkbig_dipper_2_0_docs||[]).push([[901],{3905:function(n,e,t){t.d(e,{Zo:function(){return c},kt:function(){return m}});var o=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,o,r=function(n,e){if(null==n)return{};var t,o,r={},i=Object.keys(n);for(o=0;o<i.length;o++)t=i[o],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(o=0;o<i.length;o++)t=i[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var s=o.createContext({}),d=function(n){var e=o.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},c=function(n){var e=d(n.components);return o.createElement(s.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return o.createElement(o.Fragment,{},e)}},u=o.forwardRef((function(n,e){var t=n.components,r=n.mdxType,i=n.originalType,s=n.parentName,c=l(n,["components","mdxType","originalType","parentName"]),u=d(t),m=r,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||i;return t?o.createElement(f,a(a({ref:e},c),{},{components:t})):o.createElement(f,a({ref:e},c))}));function m(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var i=t.length,a=new Array(i);a[0]=u;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=n,l.mdxType="string"==typeof n?n:r,a[1]=l;for(var d=2;d<i;d++)a[d]=t[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4712:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var o=t(2122),r=t(9756),i=(t(7294),t(3905)),a=["components"],l={title:"Themes",sidebar_position:1},s=void 0,d={unversionedId:"cosmos-based/frontend/customisations/theme",id:"cosmos-based/frontend/customisations/theme",isDocsHomePage:!1,title:"Themes",description:"By default we offer light, dark, deuteranopia and tritanopia themes to make our explorer more accessible.",source:"@site/docs/cosmos-based/frontend/customisations/theme.md",sourceDirName:"cosmos-based/frontend/customisations",slug:"/cosmos-based/frontend/customisations/theme",permalink:"/cosmos-based/frontend/customisations/theme",version:"current",lastUpdatedAt:1646194217,formattedLastUpdatedAt:"3/2/2022",sidebarPosition:1,frontMatter:{title:"Themes",sidebar_position:1},sidebar:"mySidebar",previous:{title:"Setup",permalink:"/cosmos-based/frontend/setup"},next:{title:"Custom Tx Messages",permalink:"/cosmos-based/frontend/customisations/tx"}},c=[{value:"Updating <code>light</code> / <code>dark</code> theme",id:"updating-light--dark-theme",children:[]},{value:"Overriding Common (Example)",id:"overriding-common-example",children:[]}],p={toc:c};function u(n){var e=n.components,t=(0,r.Z)(n,a);return(0,i.kt)("wrapper",(0,o.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"By default we offer ",(0,i.kt)("inlineCode",{parentName:"p"},"light"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"dark"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"deuteranopia")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"tritanopia")," themes to make our explorer more accessible."),(0,i.kt)("p",null,"All themes are located inside ",(0,i.kt)("inlineCode",{parentName:"p"},"src/styles/themes"),". If the default theme doesn't match the look you're going for feel free to check out these other ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/forbole/big-dipper-2.0-cosmos/tree/base/.misc/themes"},"themes")," we are currently using."),(0,i.kt)("h2",{id:"updating-light--dark-theme"},"Updating ",(0,i.kt)("inlineCode",{parentName:"h2"},"light")," / ",(0,i.kt)("inlineCode",{parentName:"h2"},"dark")," theme"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"src/styles/theme/index.ts")," will hold all themes in which ",(0,i.kt)("inlineCode",{parentName:"p"},"light")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"dark")," have in common. If you would like to override anything in common just add the key value pair inside ",(0,i.kt)("inlineCode",{parentName:"p"},"light.ts / dark.ts"),". All theme files will have higher priority than the colors inside ",(0,i.kt)("inlineCode",{parentName:"p"},"index.ts"),"."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Default Common"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"/** Common themes that don't change across light and dark theme */\nexport const common = {\n  breakpoints: {\n    keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n    values: {\n      xs: 0,\n      sm: 375,\n      md: 768,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n  mixins: {\n    toolbar: {\n      '@media (min-width: 1280px)': {\n        height: '160px',\n        overflow: 'hidden',\n      },\n    },\n    layout: {\n      padding: '16px',\n      '@media (min-width: 1280px)': {\n        padding: '16px 24px',\n      },\n    },\n    tableCell: {\n      height: '50px',\n      padding: '16px',\n      display: 'flex',\n      alignItems: 'center',\n      '& > *': {\n        width: '100%',\n      },\n      '& .MuiTypography-body1': {\n        whiteSpace: 'nowrap',\n      },\n    },\n  },\n  props: {\n    MuiSvgIcon: {\n      htmlColor: '#999999', // same as custom /general /icons\n    },\n    MuiButton: {\n      disableElevation: true,\n    },\n  },\n  typography: {\n    fontFamily: '\"Hind Madurai\", sans-serif',\n    h1: {\n      fontSize: '2rem',\n      letterSpacing: 0.25,\n    },\n    h2: {\n      fontSize: '1.5rem',\n      letterSpacing: 0,\n    },\n    h3: {\n      fontSize: '1.25rem',\n      letterSpacing: 0.15,\n    },\n    h4: {\n      fontSize: '1rem',\n      letterSpacing: 0.15,\n    },\n    h5: {\n      fontSize: '0.875rem',\n      letterSpacing: 0.1,\n      fontWeight: 500,\n    },\n    h6: {\n      fontSize: '0.75rem',\n      letterSpacing: 0.1,\n      fontWeight: 500,\n    },\n    body1: {\n      fontSize: '1rem',\n      whiteSpace: 'pre-wrap',\n      letterSpacing: 0.5,\n    },\n    body2: {\n      fontSize: '0.875rem',\n      letterSpacing: 0.25,\n    },\n    caption: {\n      fontSize: '0.75rem',\n      letterSpacing: 0.4,\n    },\n    button: {\n      fontSize: '0.875rem',\n      letterSpacing: 1.25,\n      textTransform: 'none',\n    },\n  },\n  palette: {\n    custom: {\n      general: {\n        icon: '#999999',\n      },\n      tags: {\n        zero: '#E8E8E8',\n        one: '#2460FA',\n        two: '#2BA891',\n        three: '#E79720',\n        four: '#F17047',\n        five: '#DA4B4B',\n        six: '#9438DC',\n        seven: '#1A869D',\n        eight: '#2C9944',\n        nine: '#B49F31',\n        ten: '#E9A846',\n        eleven: '#E94681',\n        twelve: '#C15EC4',\n        thirteen: '#C388D9',\n        fourteen: '#46AEE9',\n        fifteen: '#58BC91',\n        sixteen: '#90BC58',\n        seventeen: '#E99E8E',\n        eighteen: '#F0A479',\n        nineteen: '#D37763',\n        twenty: '#D9C788',\n      },\n      fonts: {\n        fontFive: '#FFFFFF',\n        highlight: '#1D86FF', // links\n        // highlight: '#56B4E9', // links\n      },\n      condition: {\n        zero: '#E8E8E8',\n        one: '#1EC490',\n        two: '#FF961B',\n        three: '#FC6A8A',\n      },\n      tokenomics: {\n        one: '#1EC490',\n        two: '#497BFF',\n        three: '#9F46EC',\n      },\n      charts: {\n        zero: '#E8E8E8',\n        one: '#EB3AA4',\n        two: '#497BFF',\n        three: '#FF961B',\n        four: '#1EC490',\n        five: '#9F46EC',\n      },\n    },\n  },\n  overrides: {\n    MuiTableHead: {\n      root: {\n        backgroundColor: 'initial',\n      },\n    },\n    MuiTooltip: {\n      tooltip: {\n        backgroundColor: 'transparent',\n      },\n    },\n    MuiTableCell: {\n      root: {\n        borderBottom: 'none',\n        padding: '0 16px',\n        height: '50px',\n        fontSize: '1rem',\n      },\n    },\n    MuiTabs: {\n      root: {\n        // '& .MuiTabs-fixed': {\n        //   overflow: 'auto',\n        // },\n        '&.MuiTabs-root, & .MuiTab-root': {\n          minHeight: '40px',\n        },\n        '& .MuiTab-textColorInherit': {\n          opacity: 1,\n          fontSize: '1rem',\n        },\n      },\n    },\n  },\n};\n"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Default Light Theme"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"const backgroundDefault = '#F8F8F8';\nconst surfaceOne = '#FFFFFF';\nconst surfaceTwo = '#F8F8F8';\nconst fontOne = '#000000';\nconst fontTwo = '#414141';\nconst fontThree = '#777777';\n\n/** Custom theme overrides for light mode */\nexport const lightThemeOverride = {\n  mixins: {\n    tableCell: {\n      background: surfaceOne, // surface one\n      '&.odd': {\n        background: surfaceTwo, // surface two\n      },\n    },\n  },\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#FD3B4C',\n      contrastText: '#fff',\n    },\n    background: {\n      default: backgroundDefault,\n      paper: surfaceOne,\n    },\n    divider: '#E8E8E8',\n    text: {\n      primary: '#000000',\n      secondary: '#414141',\n    },\n    custom: {\n      general: {\n        background: backgroundDefault, // same as background default\n        surfaceOne, // same as background paper\n        surfaceTwo, // striped tables\n      },\n      fonts: {\n        fontOne,\n        fontTwo,\n        fontThree,\n        fontFour: '#999999',\n      },\n      primaryData: {\n        one: '#FA3A39',\n        two: '#FD5E1F',\n        three: '#FD5D4E',\n        four: '#FD9526',\n      },\n      results: {\n        pass: '#1EC490',\n        fail: '#FD3B4C',\n      },\n    },\n  },\n  overrides: {\n    MuiTableBody: {\n      root: {\n        '& .MuiTableRow-root': {\n          '&:nth-child(odd)': {\n            backgroundColor: surfaceTwo, // surface two\n          },\n        },\n        '& .MuiTableCell-root': {\n          color: fontTwo, // font two\n        },\n      },\n    },\n    MuiTabs: {\n      root: {\n        '& .MuiTab-textColorInherit': {\n          color: fontThree, // font three\n        },\n        '& .MuiTab-textColorInherit.Mui-selected': {\n          color: fontOne, // font one\n        },\n        '& .MuiTabs-indicator': {\n          backgroundColor: fontOne, // font one\n        },\n      },\n    },\n  },\n};\n"))),(0,i.kt)("h2",{id:"overriding-common-example"},"Overriding Common (Example)"),(0,i.kt)("p",null,"For example, if we decided ",(0,i.kt)("inlineCode",{parentName:"p"},"palette.custom.tags.one")," should not be in common because we wanted dark and light mode to have separate colors we can easily copy and paste the key value inside ",(0,i.kt)("inlineCode",{parentName:"p"},"light.ts")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"dark.ts"),". Common will then be overriden by the value inside ",(0,i.kt)("inlineCode",{parentName:"p"},"light.ts")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"dark.ts"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"index.ts\n{\n  ...\n  palette: {\n    custom: {\n      tags: {\n        one: '#2460FA' // will be overriden\n      }\n      ...\n    }\n  }\n}\n\nlight.ts\n\n{\n  ...\n  palette: {\n    custom: {\n      tags: {\n        one: 'blue' // higher priority\n      }\n      ...\n    }\n  }\n}\n\n----\n\ndark.ts\n\n{\n  ...\n  palette: {\n    custom: {\n      tags: {\n        one: 'ornage' // higher priority\n      }\n    }\n    ...\n  }\n}\n")))}u.isMDXComponent=!0}}]);