"use strict";(self.webpackChunkbig_dipper_2_0_docs=self.webpackChunkbig_dipper_2_0_docs||[]).push([[56],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),u=o,h=m["".concat(l,".").concat(u)]||m[u]||d[u]||r;return t?a.createElement(h,i(i({ref:n},c),{},{components:t})):a.createElement(h,i({ref:n},c))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<r;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1590:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=t(7462),o=(t(7294),t(3905));const r={title:"Setup",sidebar_position:1},i=void 0,s={unversionedId:"cosmos-based/frontend/setup",id:"cosmos-based/frontend/setup",title:"Setup",description:"Docs curently based on: v3.0.0",source:"@site/docs/cosmos-based/frontend/setup.md",sourceDirName:"cosmos-based/frontend",slug:"/cosmos-based/frontend/setup",permalink:"/cosmos-based/frontend/setup",draft:!1,tags:[],version:"current",lastUpdatedAt:1682405329,formattedLastUpdatedAt:"Apr 25, 2023",sidebarPosition:1,frontMatter:{title:"Setup",sidebar_position:1},sidebar:"mySidebar",previous:{title:"v2.0.0 to v3.0.0",permalink:"/cosmos-based/parser/migrations/v3.0.0"},next:{title:"Custom Tx Messages",permalink:"/cosmos-based/frontend/customisations/tx"}},l={},p=[{value:"Clone the repository",id:"clone-the-repository",level:2},{value:"Prepare project directory",id:"prepare-project-directory",level:2},{value:"Use the base project to create your own project",id:"use-the-base-project-to-create-your-own-project",level:3},{value:"Remove unnecessary projects (optional)",id:"remove-unnecessary-projects-optional",level:3},{value:"Prepare the config files",id:"prepare-the-config-files",level:2},{value:"Chain config",id:"chain-config",level:3},{value:"General Config",id:"general-config",level:3},{value:"Enviroment Variables",id:"enviroment-variables",level:3},{value:"Add images",id:"add-images",level:2},{value:"Add logo and icon files",id:"add-logo-and-icon-files",level:3},{value:"Import images",id:"import-images",level:3},{value:"Check Hasura is in sync with your graphql operations",id:"check-hasura-is-in-sync-with-your-graphql-operations",level:2},{value:"Start Development mode",id:"start-development-mode",level:2},{value:"Build and Run the Docker Image",id:"build-and-run-the-docker-image",level:2},{value:"List the explorer",id:"list-the-explorer",level:2}],c={toc:p},m="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(m,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Docs curently based on: ",(0,o.kt)("inlineCode",{parentName:"p"},"v3.0.0")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Requires ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/forbole/bdjuno"},"BDJuno")," to be on at least ",(0,o.kt)("inlineCode",{parentName:"p"},"v1.1.0")," release to support hasura actions(GraphQL API server).")),(0,o.kt)("p",null,"Since ",(0,o.kt)("inlineCode",{parentName:"p"},"v3.0.0"),", we have merged every chain's Big Dipper UI to be in a single branch according to the ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Monorepo"},"monorepo")," concept."),(0,o.kt)("p",null,"The following will guide you how to prepare and setup Big Dipper 2.0 UI for your own explorer. If you have any other questions please feel free to open an ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/forbole/big-dipper-2.0-cosmos/issues"},"issue")," with your enquiry."),(0,o.kt)("h2",{id:"clone-the-repository"},"Clone the repository"),(0,o.kt)("p",null,"Fork, clone, and check out our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/forbole/big-dipper-2.0-cosmos/releases"},"latest release")," for the most stable version or feel free to use the current documentation version."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ git clone https://github.com/<user>/big-dipper-2.0-cosmos.git\n$ cd big-dipper-2.0-cosmos/\n$ git checkout tags/[latest release]\n")),(0,o.kt)("h2",{id:"prepare-project-directory"},"Prepare project directory"),(0,o.kt)("p",null,"To run your own Big Dipper 2.0 UI, you will need to create new project directory. The following instructions will guide you how to correctly prepare it. For this example we will take ",(0,o.kt)("inlineCode",{parentName:"p"},"examplenet")," as the chain name to illustrate it."),(0,o.kt)("h3",{id:"use-the-base-project-to-create-your-own-project"},"Use the base project to create your own project"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Rename Directory"),": Duplicate ",(0,o.kt)("inlineCode",{parentName:"li"},"apps/web")," base project directory and rename it according to the chain name, in our case we will rename it to ",(0,o.kt)("inlineCode",{parentName:"li"},"apps/web-examplenet"),"."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Update ",(0,o.kt)("inlineCode",{parentName:"strong"},"package.json")),": Update the workspace name with the project name ",(0,o.kt)("inlineCode",{parentName:"li"},"web-examplenet")," in ",(0,o.kt)("inlineCode",{parentName:"li"},"apps/web-examplenet/package.json")," at line 2:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"{2}","{2}":!0},'{\n  "name": "web-examplenet",\n  "version": "1.0.0",\n\n  ...\n}\n')),(0,o.kt)("h3",{id:"remove-unnecessary-projects-optional"},"Remove unnecessary projects (optional)"),(0,o.kt)("p",null,"Under the ",(0,o.kt)("inlineCode",{parentName:"p"},"apps/")," directory, you may find many projects such as ",(0,o.kt)("inlineCode",{parentName:"p"},"web-agoric"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"web-akash"),"..., etc. To reduce the project size, you can simply delete those ",(0,o.kt)("inlineCode",{parentName:"p"},"apps/web-*")," directories and keep just ",(0,o.kt)("inlineCode",{parentName:"p"},"apps/web-examplenet"),"."),(0,o.kt)("h2",{id:"prepare-the-config-files"},"Prepare the config files"),(0,o.kt)("h3",{id:"chain-config"},"Chain config"),(0,o.kt)("p",null,"The chain config file is located at ",(0,o.kt)("inlineCode",{parentName:"p"},"apps/web-examplenet/src/chain.json"),". To customize your explorer, you need to: "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Update ",(0,o.kt)("inlineCode",{parentName:"li"},"chainName")," field with the chain name of your project. For instance: ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "chainName" : "examplenet"\n}\n')),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"For the rest of the configs, including colors, themes, endpoints, etc., check ",(0,o.kt)("a",{parentName:"li",href:"/cosmos-based/frontend/chain-config"},"chain config reference")," for a better understanding of what each section and field refers to.")),(0,o.kt)("h3",{id:"general-config"},"General Config"),(0,o.kt)("p",null,"In ",(0,o.kt)("inlineCode",{parentName:"p"},"src/configs/general_config.json"),", ",(0,o.kt)("strong",{parentName:"p"},"update the json")," to give proper maintainer credits as well as a way for users to submit bugs/issues.\nFor a better understanding of what each section and field refers to, please read the ",(0,o.kt)("a",{parentName:"p",href:"/cosmos-based/frontend/general-config"},"general config reference"),"."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"We will not be handling any opened issues directly related to your explorer as we won't have the proper info.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "maintainer": {\n    "name": "Forbole", // update\n    "url": "https://forbole.com" // update\n  },\n  "github": {\n    "reportIssue": "https://github.com/forbole/big-dipper-2.0-cosmos/issues" // update\n  },\n  "version": "v3.0.0"\n}\n')),(0,o.kt)("h3",{id:"enviroment-variables"},"Enviroment Variables"),(0,o.kt)("p",null,"Create ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," file inside the root of the project and update the environment variables"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"  GRAPHQL_URL=http://localhost:8080/v1/graphql\n  GRAPHQL_WS=ws://localhost:8080/v1/graphql\n  NODE_ENV=development\n  PORT=3000\n  RPC_WEBSOCKET=http://localhost:26657/websocket\n  NEXT_PUBLIC_CHAIN_TYPE=mainnet\n  PROJECT_NAME=web-examplenet\n")),(0,o.kt)("h2",{id:"add-images"},"Add images"),(0,o.kt)("h3",{id:"add-logo-and-icon-files"},"Add logo and icon files"),(0,o.kt)("p",null,"The logos and icons are located at ",(0,o.kt)("inlineCode",{parentName:"p"},"packages/shared-utils/assets/logos/*.svg")," & ",(0,o.kt)("inlineCode",{parentName:"p"},"packages/shared-utils/assets/icons/*.svg"),". "),(0,o.kt)("p",null,"Add your chain logo under ",(0,o.kt)("inlineCode",{parentName:"p"},"packages/shared-utils/assets/logos/examplenet-light.svg")," and your chain icon under ",(0,o.kt)("inlineCode",{parentName:"p"},"packages/shared-utils/assets/icons/examplenet-light.svg"),". To reduce the project size you can remove unnecessary logos and icons inside those folders. "),(0,o.kt)("h3",{id:"import-images"},"Import images"),(0,o.kt)("p",null,"The logos and icons are imported in ",(0,o.kt)("inlineCode",{parentName:"p"},"packages/ui/src/components/ChainIcon/index.tsx"),". You can now delete the uneccessary imports of other chains in this file and add our ",(0,o.kt)("inlineCode",{parentName:"p"},"examplenet")," logo and icon as follow:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import examplenetIconLight from 'shared-utils/assets/icons/examplenet-light.svg';\nimport examplenetLogoLight from 'shared-utils/assets/logos/examplenet-light.svg';\n\n  switch (chainName) {\n    case 'examplenet':\n      [iconDark, iconLight] =\n        type === 'icon'\n          ? [examplenetIconLight, examplenetIconLight]\n          : [examplenetLogoLight, examplenetLogoLight];\n      break;\n  }\n\n")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Example of index.tsx: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import chainCoing from '@/chainConfig';\nimport { useStyles } from '@/components/ChainIcon/useStyles';\nimport classnames from 'classnames';\nimport Image, { type ImageProps } from 'next/future/image';\n\nimport baseIconLight from 'shared-utils/assets/icons/base-light.svg?url';\nimport baseLogoLight from 'shared-utils/assets/logos/base-light.svg?url';\nimport examplenetIconLight from 'shared-utils/assets/icons/examplenet-light.svg';\nimport examplenetLogoLight from 'shared-utils/assets/logos/examplenet-light.svg';\n\ninterface IconProps extends Omit<ImageProps, 'id' | 'src'> {\n  type: 'icon' | 'logo';\n  chainName?: string;\n}\n\nconst ChainIcon = ({\n  className,\n  type,\n  chainName = chainCoing().chainName,\n  ...props\n}: IconProps) => {\n  const { classes, cx } = useStyles();\n\n  let [iconDark, iconLight] =\n    type === 'icon' ? [baseIconLight, baseIconLight] : [baseLogoLight, baseLogoLight];\n  switch (chainName) {\n    case 'examplenet':\n      [iconDark, iconLight] =\n        type === 'icon'\n          ? [examplenetIconLight, examplenetIconLight]\n          : [examplenetLogoLight, examplenetLogoLight];\n      break;\n\n\n    default:\n      throw new Error(`chain ${chainName} not supported`);\n  }\n  return (\n    <span className={cx(className, classes.container)}>\n      <Image width={0} height={0} src={iconDark} {...props} className={classes.dark} unoptimized />\n      <Image\n        width={0}\n        height={0}\n        src={iconLight}\n        {...props}\n        className={classes.light}\n        unoptimized\n      />\n    </span>\n  );\n};\n\nexport default ChainIcon;\n"))),(0,o.kt)("h2",{id:"check-hasura-is-in-sync-with-your-graphql-operations"},"Check Hasura is in sync with your graphql operations"),(0,o.kt)("p",null,"In ",(0,o.kt)("inlineCode",{parentName:"p"},"apps/web-examplenet/codegen.yml")," change the ",(0,o.kt)("strong",{parentName:"p"},"schema")," field to your graphql url to run ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn run graphql:codegen"),". It will regenerate the needed ",(0,o.kt)("inlineCode",{parentName:"p"},"src/graphql/types.tsx"),". If an error occurs, it can indicate that the backend hasura was not setup correctly."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{6}","{6}":!0},'overwrite: true\ngenerates:\n  ./src/graphql/types/general_types.ts:\n    documents:\n      - \'src/graphql/general/*\'\n    schema: <your graphql url>\n    config:\n      # omitOperationSuffix: true\n      skipTypeNameForRoot: true\n    plugins:\n      - "typescript"\n      - "typescript-operations"\n      - "typescript-react-apollo" # To generate custom hooks per query\n\n\n')),(0,o.kt)("h2",{id:"start-development-mode"},"Start Development mode"),(0,o.kt)("p",null,"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn install")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"corepack enable && yarn dev --filter [project name]")," to start the dev mode."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-f"},"$ yarn install\n$ corepack enable && yarn dev --filter web-examplenet\n")),(0,o.kt)("h2",{id:"build-and-run-the-docker-image"},"Build and Run the Docker Image"),(0,o.kt)("p",null,"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose up")," to build and run the project's docker image. It reads the args from ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," file, so if you want to run different project you should update the ",(0,o.kt)("inlineCode",{parentName:"p"},"PROJECT_NAME")," variable inside the ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," file."),(0,o.kt)("h2",{id:"list-the-explorer"},"List the explorer"),(0,o.kt)("p",null,"If you would like to list your explorer among the rest of the BigDipper explorers, you can open a PR in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/forbole/big-dipper-networks"},"this Repository")," with your network information added inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"networks.json")," file."),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Example of networks.json file "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'[\n    {\n    "name": "exampleNet",\n    "logo": "https://raw.githubusercontent.com/examplenet/examplenet/main/logos/examplenet.svg?sanitize=true",\n    "cover": "https://raw.githubusercontent.com/examplenet/examplenet/main/covers/examplenet.png?sanitize=true",\n    "links": [\n      {\n        "name": "Mainnet",\n        "chain_id": "examplenet-1",\n        "url": "https://examplenet.explorer.net"\n      }\n    ]\n  }\n]\n'))))}d.isMDXComponent=!0}}]);