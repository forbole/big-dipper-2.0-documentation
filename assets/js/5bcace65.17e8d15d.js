"use strict";(self.webpackChunkbig_dipper_2_0_docs=self.webpackChunkbig_dipper_2_0_docs||[]).push([[431],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),u=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=u(e.components);return o.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(t),m=r,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return t?o.createElement(h,l(l({ref:n},p),{},{components:t})):o.createElement(h,l({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<a;u++)l[u]=t[u];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9946:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var o=t(2122),r=t(9756),a=(t(7294),t(3905)),l=["components"],i={title:"2. Setup and run SolJuno",sidebar_position:3},s=void 0,u={unversionedId:"solana/parser/setup",id:"solana/parser/setup",isDocsHomePage:!1,title:"2. Setup and run SolJuno",description:"Prepare the environment",source:"@site/docs/solana/parser/setup.md",sourceDirName:"solana/parser",slug:"/solana/parser/setup",permalink:"/solana/parser/setup",version:"current",lastUpdatedAt:1658156907,formattedLastUpdatedAt:"7/18/2022",sidebarPosition:3,frontMatter:{title:"2. Setup and run SolJuno",sidebar_position:3},sidebar:"mySidebar",previous:{title:"1. Setup the database",permalink:"/solana/parser/database"},next:{title:"3. Setup and run Hasura",permalink:"/solana/parser/hasura"}},p=[{value:"Prepare the environment",id:"prepare-the-environment",children:[]},{value:"Installing SolJuno",id:"installing-soljuno",children:[]},{value:"Initializing the configuration",id:"initializing-the-configuration",children:[]},{value:"Running Soljuno",id:"running-soljuno",children:[]}],c={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"prepare-the-environment"},"Prepare the environment"),(0,a.kt)("p",null,"To properly install and set up SolJuno you need to first prepare the environment by updating/upgrading the system and installing the libraries that are needed to install the SolJuno binary."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Update the system\n$ sudo apt-get update\n$ sudo apt-get upgrade\n\n# Install the libraries\n$ sudo apt install git build-essential ufw curl docker-ce docker-ce-cli containerd.io\n")),(0,a.kt)("p",null,"To verify if Docker is installed correctly run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ docker version\n")),(0,a.kt)("p",null,"It should return the Docker version and the output should look similar to this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Client: Docker Engine - Community\n Version:           20.10.12\n API version:       1.41\n Go version:        go1.16.12\n Git commit:        e91ed57\n Built:             Mon Dec 13 11:45:33 2021\n OS/Arch:           linux/amd64\n Context:           default\n Experimental:      true\n\nServer: Docker Engine - Community\n Engine:\n  Version:          20.10.12\n  API version:      1.41 (minimum version 1.12)\n  Go version:       go1.16.12\n  Git commit:       459d0df\n  Built:            Mon Dec 13 11:43:42 2021\n  OS/Arch:          linux/amd64\n  Experimental:     false\n containerd:\n  Version:          1.4.12\n  GitCommit:        7b11cfaabd73bb80907dd23182b9347b4245eb5d\n runc:\n  Version:          1.0.2\n  GitCommit:        v1.0.2-0-g52b36a2\n docker-init:\n  Version:          0.19.0\n  GitCommit:        de40ad0\n")),(0,a.kt)("p",null,"Next, you need to install ",(0,a.kt)("a",{parentName:"p",href:"https://golang.org/dl/"},"Go 1.16+")," and set up its environment variables, to do this run: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Install go\n$ sudo snap install go --classic\n\n# Export environment variables\n$ echo 'export GOPATH=\"$HOME/go\"' >> ~/.profile\n$ echo 'export GOBIN=\"$GOPATH/bin\"' >> ~/.profile\n$ echo 'export PATH=\"$GOBIN:$PATH\"' >> ~/.profile\n$ source ~/.profile\n")),(0,a.kt)("p",null,"To verify if Go is installed correctly run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ go version\n")),(0,a.kt)("p",null,"It should return Go version, the output should look similar to this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"go version go1.18 linux/amd64\n")),(0,a.kt)("h2",{id:"installing-soljuno"},"Installing SolJuno"),(0,a.kt)("p",null,"In order to install SolJuno you are required to have ",(0,a.kt)("a",{parentName:"p",href:"https://golang.org/dl/"},"Go 1.16+")," installed on your machine. Once you have it, the first thing to do is to clone the GitHub repository. To do this you can run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ git clone https://github.com/forbole/soljuno.git\n")),(0,a.kt)("p",null,"Then, you need to install the binary. To do this, run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ make install\n")),(0,a.kt)("p",null,"This will put the ",(0,a.kt)("inlineCode",{parentName:"p"},"soljuno")," binary inside your ",(0,a.kt)("inlineCode",{parentName:"p"},"$GOPATH/bin")," folder. You should now be able to run ",(0,a.kt)("inlineCode",{parentName:"p"},"soljuno")," to make sure it's installed:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'$ soljuno\nA Solana chain data aggregator. It improves the chain\'s data accessibility\nby providing an indexed database exposing aggregated resources and models such as blocks, validators,\ntransactions, and various aspects of the epoch module. \nsoljuno is meant to run with a GraphQL layer on top so that it even further eases the ability for developers and\ndownstream clients to answer queries such as "What is the average gas cost of a block?" while also allowing\nthem to compose more aggregate and complex queries.\n\nUsage:\n  soljuno [command]\n\nAvailable Commands:\n  db               Database subcommands\n  fix              Fix subcommands\n  help             Help about any command\n  import-snapshot  Import a snapshot at specific slot\n  import-tokenlist Import a tokenlist to the token unit table\n  init             Initializes the configuration files\n  parse            Start parsing the blockchain data\n  proxy-start      Start actions proxy server for Hasura Actions\n  version          Print the version information\n\nFlags:\n  -h, --help          help for soljuno\n      --home string   Set the home folder of the application, where all files will be stored (default "/home/kilem/.soljuno")\n\nUse "soljuno [command] --help" for more information about a command.\n')),(0,a.kt)("h2",{id:"initializing-the-configuration"},"Initializing the configuration"),(0,a.kt)("p",null,"In order to correctly parse and store the data based on your requirements, Soljuno allows you to customize its behavior via a TOML file called ",(0,a.kt)("inlineCode",{parentName:"p"},"config.toml"),". In order to create the first instance of the ",(0,a.kt)("inlineCode",{parentName:"p"},"config.toml")," file you can run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ soljuno init\n")),(0,a.kt)("p",null,"This will create such file inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.soljuno")," folder.",(0,a.kt)("br",{parentName:"p"}),"\n","Note that if you want to change the folder used by Soljuno you can do this using the ",(0,a.kt)("inlineCode",{parentName:"p"},"--home")," flag:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ soljuno init --home /path/to/my/folder\n")),(0,a.kt)("p",null,"Once the file is created, you are required to edit it and change the different values. To do this you can run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ nano ~/.soljuno/config.toml\n")),(0,a.kt)("p",null,"For a better understanding of what each section and field refers to, please read the ",(0,a.kt)("a",{parentName:"p",href:"/solana/parser/config/config"},"config reference"),"."),(0,a.kt)("h2",{id:"running-soljuno"},"Running Soljuno"),(0,a.kt)("p",null,"Once the configuration file has been setup, you can run Soljuno using the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ soljuno parse\n")),(0,a.kt)("p",null,"If you are using a custom folder for the configuration file, please specify it using the ",(0,a.kt)("inlineCode",{parentName:"p"},"--home")," flag:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ soljuno parse --home /path/to/my/config/folder\n")),(0,a.kt)("p",null,"We highly suggest you running Soljuno as a system service so that it can be restarted automatically in the case it stops. To do this you can run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ sudo tee /etc/systemd/system/soljuno.service > /dev/null <<EOF\n[Unit]\nDescription=SolJuno parser\nAfter=network-online.target\n\n[Service]\nUser=$USER\nExecStart=$GOPATH/bin/soljuno parse\nRestart=always\nRestartSec=3\nLimitNOFILE=4096\n\n[Install]\nWantedBy=multi-user.target\nEOF\n")),(0,a.kt)("p",null,"Then you need to enable and start the service:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ sudo systemctl enable soljuno\n$ sudo systemctl start soljuno\n")))}d.isMDXComponent=!0}}]);